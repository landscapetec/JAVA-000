<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文档如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文档是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
                 当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->

<configuration debug="false">
    <!--1. 输出到控制台-->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%p] [%d{yyyy-MM-dd HH:mm:ss} | %r] [%t] [%c:%L] %m%n</pattern>
        </encoder>
    </appender>

    <logger name="com.springboot" level="debug"/>
    <root level="info">
        <appender-ref ref="stdout"/>
    </root>
</configuration>


<!--    # Set root logger level to DEBUG and its only appender to A1.-->
<!--log4j.rootLogger=DEBUG, console-->


<!--log4j.appender.console=org.apache.log4j.ConsoleAppender-->
<!--log4j.appender.console.layout=org.apache.log4j.PatternLayout-->
<!--log4j.appender.console.layout.ConversionPattern=[%p] [%-d{yyyy-MM-dd HH:mm:ss} | %r] [%t] [%c:%L] - %m%n-->

<!--#日志格式：-->
<!--#    %m 输出代码中指定的消息-->
<!--#    %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL-->
<!--#    %r 输出自应用启动到输出该log信息耗费的毫秒数-->
<!--#    %c 输出所属的类目，通常就是所在类的全名-->
<!--#    %t 输出产生该日志事件的线程名-->
<!--#    %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”-->
<!--#    %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 ：10：28，921-->
<!--#    %L 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。-->